trigger:
- master

stages:
# Build
- stage: build
  displayName: Build
  jobs:
  - job: build
    displayName: Build Service Fabric Services
    pool:
      vmImage: 'windows-latest'
    steps:
      # Install nuget.exe
      - task: NuGetToolInstaller@1
        displayName: Install Nuget Tools
        inputs:
          versionSpec: '4.9.3'
      
      - task: PowerShell@2
        displayName: Build Application
        inputs:
          targetType: 'inline'
          script: |
            # Restore SF Build SDK
            nuget restore src/SFDemo/SFDemo/ -PackagesDirectory src/SFDemo/packages/

            # Build Binaries
            dotnet build src/SFDemo/SFDemo.sln

            # Package SF Application
            dotnet msbuild .\src\SFDemo\SFDemo\SFDemo.sfproj /t:package

            cp ./src/SFDemo/SFDemo/* $(Build.ArtifactStagingDirectory)/ -R
      
      # Update Service Versions based on build number
      - task: ServiceFabricUpdateManifests@2
        inputs:
          updateType: 'Manifest versions'
          applicationPackagePath: '$(Build.ArtifactStagingDirectory)/pkg/Debug'
          versionSuffix: '$(Build.BuildNumber)'
          versionBehavior: 'Replace'
          updateOnlyChanged: false
      
      # Publish artifacts
      - publish: $(Build.ArtifactStagingDirectory)/
        artifact: demo

# Staging Release
- stage: staging
  displayName: Staging
  jobs:
  - job: release
    displayName: Staging Release
    pool:
      vmImage: 'windows-latest'
    steps:
      - download: current
        artifact: demo
      
      # Deploy!Deploy Deploy
      - task: ServiceFabricDeploy@1
        inputs:
          applicationPackagePath: './demo//pkg/Debug/'
          serviceConnectionName: 'demo-sf-sandbox'
          publishProfilePath: './demo/PublishProfiles/Cloud.xml'
          applicationParameterPath: './demo/ApplicationParameters/Cloud.xml'
          overwriteBehavior: 'SameAppTypeAndVersion'
